<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [

  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY date        "<date>18 August, 2018</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY package     "debspawn">
]>

<refentry>
	<refentryinfo>
	<title>debspawn</title>
	<copyright>
		<year>2018</year>
		<holder>Matthias Klumpp</holder>
	</copyright>
	<productname>DebSpawn</productname>
	&date;
	</refentryinfo>

	<refmeta>
		<refentrytitle>debspawn</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>
	<refnamediv>
		<refname>&package;</refname>
		<refpurpose>Build in nspawn containers</refpurpose>
	</refnamediv>

       <refsynopsisdiv>
	       <cmdsynopsis>
		       <command>&package;</command>
		       @BASE_FLAGS_SYNOPSIS@
		       <group>
			       <option choice="req">COMMAND</option>
		       </group>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsect1>
		<title>Description</title>
		<para>
			This manual page documents the <command>&package;</command> command.
		</para>
		<para>
			<command>&package;</command> is a tool to build Debian packages in an isolated environment, using nspawn containers.
			By using containers, debspawn can isolate builds from the host system much further. It also allows for more advanced features to manage builds,
			for example setting resource limits for individual builds.
		</para>
		<para>
			Please keep in mind that debspawn is not a security feature! While it provides a lot of isolation from the host system, you should not run arbitrary
			untrusted code with it. The usual warnings for all container technology apply here.
			See <command>systemd-nspawn(1)</command> for more information on the container solution debspawn uses.
		</para>
		<para>
			Debspawn also allows to run arbitrary custom commands in its environment. This is useful to execute a variety of non-package build and QA actions in the
			same environment in which packages are normally built.
		</para>
	</refsect1>

	<refsect1>
		<title>Subcommands</title>

		<para>
			<command>&package;</command> actions are invoked via subcommands. Refer to their individual manual pages for further details.
		</para>

		<variablelist>

			<varlistentry>
				<term><option>create</option></term>
				<listitem>
					<para>
						Create a new container base image for a specific suite, architecture and variant. A custom mirror location can also be
						provided. For details, see <command>debspawn-create(1)</command>.
					</para>
				</listitem>


			</varlistentry>

			<varlistentry>
				<term><option>delete</option></term>
				<listitem>
					<para>
						Delete a container base image and all data associated with it.
						For details, see <command>debspawn-delete(1)</command>.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>update</option></term>
				<listitem>
					<para>
						Update a container base image, ensuring all packages are up to date and all
						required scripts are installed.
						For details, see <command>debspawn-update(1)</command>.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>build</option></term>
				<listitem>
					<para>
						Build a Debian package in an isolated environment.
						For details, see <command>debspawn-build(1)</command>.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>login</option></term>
				<listitem>
					<para>
						Get an interactive shell session in a container.
						For details, see <command>debspawn-login(1)</command>.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>run</option></term>
				<listitem>
					<para>
						Run arbitrary commands in debspawn container session. This is primarily useful
						for using <command>&package;</command> from another script.
						For details, see <command>debspawn-run(1)</command>.
					</para>
				</listitem>
			</varlistentry>


		</variablelist>
	</refsect1>

	<refsect1>
		<title>Flags</title>

		<variablelist>
			@BASE_FLAGS_ENTRIES@
		</variablelist>
	</refsect1>

	<refsect1>
		<title>See Also</title>
		<para>dpkg-buildpackage(1), systemd-nspawn(1), sbuild(1).</para>
	</refsect1>
<refsect1>
<title>AUTHOR</title>
<para>
	This manual page was written by Matthias Klumpp <email>mak@debian.org</email>.
</para>
</refsect1>
</refentry>
